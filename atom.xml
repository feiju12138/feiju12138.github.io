<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>57uv6Z6g55qE5Y2a5a6i</title>
  
  <subtitle>MS4wLjABAAAA5qMD8Gzdcgq7HXUOviKB59i0-ybJ59jJvNzyaPt5XOsVNqP6DU7WLcoAXvdxvYdp💗&lt;br&gt;&lt;font color=&quot;red&quot;&gt;本站所有文章仅作技术研究，请勿非法破坏，请遵守相关法律法规，后果自负&lt;/font&gt;</subtitle>
  <link href="https://loli.fj.cn/atom.xml" rel="self"/>
  
  <link href="https://loli.fj.cn/"/>
  <updated>2025-10-25T07:39:44.956Z</updated>
  <id>https://loli.fj.cn/</id>
  
  <author>
    <name>57uv6Z6g</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【笔记】布隆过滤器</title>
    <link href="https://loli.fj.cn/2025/10/24/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    <id>https://loli.fj.cn/2025/10/24/%E5%B8%83%E9%9A%86%E8%BF%87%E6%BB%A4%E5%99%A8/</id>
    <published>2025-10-24T04:20:01.000Z</published>
    <updated>2025-10-25T07:39:44.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通过Redisson实现布隆过滤器</p><span id="more"></span><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.redisson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>redisson-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.16.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建布隆过滤器"><a href="#创建布隆过滤器" class="headerlink" title="创建布隆过滤器"></a>创建布隆过滤器</h2><blockquote><p><code>redis://127.0.0.1:6379</code>：指定Redis地址<br><code>bloomFilter</code>：指定在Redis中作为布隆过滤器的键名<br><code>1000000L</code>：指定布隆过滤器的大小<br><code>0.01</code>：指定误判率为1%</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Config</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Config</span>();</span><br><span class="line">config.useSingleServer().setAddress(<span class="string">&quot;redis://127.0.0.1:6379&quot;</span>);</span><br><span class="line"><span class="type">RedissonClient</span> <span class="variable">redisson</span> <span class="operator">=</span> Redisson.create(config);</span><br><span class="line">RBloomFilter&lt;String&gt; bloomFilter = redisson.getBloomFilter(<span class="string">&quot;bloomFilter&quot;</span>);</span><br><span class="line">bloomFilter.tryInit(<span class="number">1000000L</span>, <span class="number">0.01</span>);</span><br></pre></td></tr></table></figure><h2 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h2><ul><li>在项目启动时应该将数据库中的所有数据添加到布隆过滤器作为初始数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bloomFilter.add(<span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h2><ul><li>需要重新初始化布隆过滤器</li></ul><h2 id="判断元素是否存在"><a href="#判断元素是否存在" class="headerlink" title="判断元素是否存在"></a>判断元素是否存在</h2><ul><li>如果返回<code>true</code>表示1%的可能不存在</li><li>如果返回<code>false</code>表示一定不存在</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">exists</span> <span class="operator">=</span> bloomFilter.contains(<span class="string">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.bilibili.com/video/BV1eU4y1J7GY">哔哩哔哩——IT老齐</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通过Redisson实现布隆过滤器&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://loli.fj.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】SpringBoot项目实现多线程</title>
    <link href="https://loli.fj.cn/2025/10/23/SpringBoot%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    <id>https://loli.fj.cn/2025/10/23/SpringBoot%E9%A1%B9%E7%9B%AE%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%BA%BF%E7%A8%8B/</id>
    <published>2025-10-23T09:36:46.000Z</published>
    <updated>2025-10-25T07:39:44.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目实现多线程</p><span id="more"></span><h2 id="直接使用Executor"><a href="#直接使用Executor" class="headerlink" title="直接使用Executor"></a>直接使用Executor</h2><h3 id="执行异步方法"><a href="#执行异步方法" class="headerlink" title="执行异步方法"></a>执行异步方法</h3><figure class="highlight java"><figcaption><span>src/main/java/com/service/DemoService.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Executor executor;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo</span><span class="params">()</span> &#123;</span><br><span class="line">        executor.execute(() -&gt; &#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用默认线程池"><a href="#使用默认线程池" class="headerlink" title="使用默认线程池"></a>使用默认线程池</h2><ul><li>每次调用异步方法，Spring都会将方法放入一个线程池中异步执行</li></ul><h3 id="定义配置文件"><a href="#定义配置文件" class="headerlink" title="定义配置文件"></a>定义配置文件</h3><figure class="highlight properties"><figcaption><span>src/main/resources/application.properties</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 核心线程数</span></span><br><span class="line"><span class="attr">spring.task.execution.pool.core-size</span>=<span class="string">8</span></span><br><span class="line"><span class="comment"># 最大线程数</span></span><br><span class="line"><span class="attr">spring.task.execution.pool.max-size</span>=<span class="string">16</span></span><br><span class="line"><span class="comment"># 空闲线程存活时间</span></span><br><span class="line"><span class="attr">spring.task.execution.pool.keep-alive</span>=<span class="string">60s</span></span><br><span class="line"><span class="comment"># 任务队列</span></span><br><span class="line"><span class="attr">spring.task.execution.pool.queue-capacity</span>=<span class="string">100</span></span><br><span class="line"><span class="comment"># 线程名称前缀</span></span><br><span class="line"><span class="attr">spring.task.execution.thread-name-prefix</span>=<span class="string">Custom-Thread-</span></span><br><span class="line"><span class="comment"># 是否允许核心线程超时</span></span><br><span class="line"><span class="attr">spring.task.execution.pool.allow-core-thread-timeout</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><h3 id="定义配置类"><a href="#定义配置类" class="headerlink" title="定义配置类"></a>定义配置类</h3><figure class="highlight java"><figcaption><span>src/main/java/com/config/AsyncConfig.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsyncConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义异步方法"><a href="#定义异步方法" class="headerlink" title="定义异步方法"></a>定义异步方法</h3><ul><li>异步方法只能返回<code>void</code>或<code>CompletableFuture&lt;T&gt;</code></li></ul><figure class="highlight java"><figcaption><span>src/main/java/com/AsyncClass.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsyncClass</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncMethod1</span><span class="params">()</span> &#123;</span><br><span class="line">        </span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="keyword">public</span> CompletableFuture&lt;String&gt; <span class="title function_">asyncMethod2</span><span class="params">()</span> &#123;</span><br><span class="line">        </span><br><span class="line">        ...</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> CompletableFuture.completedFuture(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="执行异步方法-1"><a href="#执行异步方法-1" class="headerlink" title="执行异步方法"></a>执行异步方法</h3><figure class="highlight java"><figcaption><span>src/main/java/com/service/DemoService.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.AsyncClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AsyncClass asyncClass;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo1</span><span class="params">()</span> &#123;</span><br><span class="line">        asyncClass.asyncMethod1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo2</span><span class="params">()</span> &#123;</span><br><span class="line">        CompletableFuture&lt;String&gt;[] futures = <span class="keyword">new</span> <span class="title class_">CompletableFuture</span>[<span class="number">2</span>];</span><br><span class="line">        futures[<span class="number">0</span>] = asyncClass.asyncMethod2();</span><br><span class="line">        futures[<span class="number">1</span>] = asyncClass.asyncMethod2();</span><br><span class="line">        <span class="comment">// 阻塞等待所有任务执行完毕</span></span><br><span class="line">        CompletableFuture.allOf(futures);</span><br><span class="line">        <span class="comment">// 获取返回值</span></span><br><span class="line">        System.out.println(futures[<span class="number">0</span>].get());</span><br><span class="line">        System.out.println(futures[<span class="number">1</span>].get());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用自定义线程池"><a href="#使用自定义线程池" class="headerlink" title="使用自定义线程池"></a>使用自定义线程池</h2><h3 id="定义配置类-1"><a href="#定义配置类-1" class="headerlink" title="定义配置类"></a>定义配置类</h3><figure class="highlight java"><figcaption><span>src/main/java/com/config/AsyncConfig.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.task.SimpleAsyncTaskExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.concurrent.ConcurrentTaskExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsyncConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(&quot;threadPoolTaskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ThreadPoolTaskExecutor <span class="title function_">threadPoolTaskExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">        executor.setCorePoolSize(<span class="number">8</span>);</span><br><span class="line">        executor.setMaxPoolSize(<span class="number">16</span>);</span><br><span class="line">        executor.setQueueCapacity(<span class="number">100</span>);</span><br><span class="line">        executor.setKeepAliveSeconds(<span class="number">60</span>);</span><br><span class="line">        executor.setThreadNamePrefix(<span class="string">&quot;Thread-&quot;</span>);</span><br><span class="line">        executor.setAllowCoreThreadTimeOut(<span class="literal">true</span>);</span><br><span class="line">        executor.setRejectedExecutionHandler(<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.DiscardPolicy());</span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每次执行任务都会创建新的线程</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(&quot;simpleAsyncTaskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> SimpleAsyncTaskExecutor <span class="title function_">simpleAsyncTaskExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SimpleAsyncTaskExecutor</span>(<span class="string">&quot;Thread-&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将Java标准线程池包装为Spring的TaskExecutor</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(&quot;concurrentTaskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ConcurrentTaskExecutor <span class="title function_">concurrentTaskExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ConcurrentTaskExecutor</span>(Executors.newFixedThreadPool(<span class="number">10</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Java标准线程池</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean(&quot;threadPoolExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Executor <span class="title function_">threadPoolExecutor</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(</span><br><span class="line">                <span class="number">5</span>,</span><br><span class="line">                <span class="number">10</span>,</span><br><span class="line">                <span class="number">60L</span>,</span><br><span class="line">                TimeUnit.SECONDS,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LinkedBlockingQueue</span>&lt;&gt;(<span class="number">100</span>),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.DiscardPolicy()</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="定义异步方法-1"><a href="#定义异步方法-1" class="headerlink" title="定义异步方法"></a>定义异步方法</h3><figure class="highlight java"><figcaption><span>src/main/java/com/AsyncClass.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AsyncClass</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async(&quot;customThreadPool&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncMethod1</span><span class="params">()</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async(&quot;simpleAsyncTaskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncMethod2</span><span class="params">()</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async(&quot;concurrentTaskExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncMethod3</span><span class="params">()</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Async(&quot;threadPoolExecutor&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncMethod4</span><span class="params">()</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="执行异步方法-2"><a href="#执行异步方法-2" class="headerlink" title="执行异步方法"></a>执行异步方法</h3><figure class="highlight java"><figcaption><span>src/main/java/com/service/DemoService.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.AsyncClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CompletableFuture;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AsyncClass asyncClass;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo1</span><span class="params">()</span> &#123;</span><br><span class="line">        asyncClass.asyncMethod1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo2</span><span class="params">()</span> &#123;</span><br><span class="line">        asyncClass.asyncMethod2();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo3</span><span class="params">()</span> &#123;</span><br><span class="line">        asyncClass.asyncMethod3();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">demo4</span><span class="params">()</span> &#123;</span><br><span class="line">        asyncClass.asyncMethod4();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目实现多线程&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://loli.fj.cn/tags/Java/"/>
    
    <category term="Spring" scheme="https://loli.fj.cn/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://loli.fj.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Pinia学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/23/Pinia%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/23/Pinia%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-23T09:28:30.000Z</published>
    <updated>2025-10-25T07:39:44.907Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Pinia符合直觉的Vue.js状态管理库（<a href="/302.html?target=https://pinia.vuejs.org/zh/">官网</a>）</p><p>通过Pinia实现对Vue项目的状态管理</p><span id="more"></span><h2 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><h2 id="定义Pinia"><a href="#定义Pinia" class="headerlink" title="定义Pinia"></a>定义Pinia</h2><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> pinia;</span><br></pre></td></tr></table></figure><h2 id="挂载Pinia"><a href="#挂载Pinia" class="headerlink" title="挂载Pinia"></a>挂载Pinia</h2><figure class="highlight js"><figcaption><span>src/main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store/index.js&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(store);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="定义Store"><a href="#定义Store" class="headerlink" title="定义Store"></a>定义Store</h2><blockquote><p><code>home</code>：指定Store的id</p></blockquote><figure class="highlight js"><figcaption><span>src/store/home.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useHome = <span class="title function_">defineStore</span>(<span class="string">&quot;home&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useHome;</span><br></pre></td></tr></table></figure><h2 id="获取Store中的State"><a href="#获取Store中的State" class="headerlink" title="获取Store中的State"></a>获取Store中的State</h2><h3 id="通过script获取Store中的State"><a href="#通过script获取Store中的State" class="headerlink" title="通过script获取Store中的State"></a>通过script获取Store中的State</h3><h4 id="CompositionAPI"><a href="#CompositionAPI" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; homeStore.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>直接解构</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; homeStore.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; toRefs &#125; from &quot;vue&quot;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">  const &#123; key &#125; = toRefs(homeStore);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; homeStore.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; storeToRefs &#125; from &quot;pinia&quot;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">  const &#123; key &#125; = storeToRefs(homeStore);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="修改Store中的State"><a href="#修改Store中的State" class="headerlink" title="修改Store中的State"></a>修改Store中的State</h2><h3 id="CompositionAPI-1"><a href="#CompositionAPI-1" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;setKey&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">  </span><br><span class="line">  function setKey() &#123;</span><br><span class="line">    homeStore.key = &quot;new value&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="修改多个Store中的State"><a href="#修改多个Store中的State" class="headerlink" title="修改多个Store中的State"></a>修改多个Store中的State</h2><h3 id="CompositionAPI-2"><a href="#CompositionAPI-2" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;setKey&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">  </span><br><span class="line">  function setKey() &#123;</span><br><span class="line">    homeStore.$patch(&#123;</span><br><span class="line">      key1: &quot;value&quot;,</span><br><span class="line">      key2: &quot;value&quot;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="重置Store中的State"><a href="#重置Store中的State" class="headerlink" title="重置Store中的State"></a>重置Store中的State</h2><h3 id="CompositionAPI-3"><a href="#CompositionAPI-3" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;resetKey&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">  </span><br><span class="line">  function resetKey() &#123;</span><br><span class="line">    homeStore.$reset();</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="替换Store为新的对象"><a href="#替换Store为新的对象" class="headerlink" title="替换Store为新的对象"></a>替换Store为新的对象</h2><h3 id="CompositionAPI-4"><a href="#CompositionAPI-4" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;replaceStore&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">  </span><br><span class="line">  function replaceStore() &#123;</span><br><span class="line">    homeStore.$state = &#123;</span><br><span class="line">      key: &quot;value&quot;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Getters"><a href="#Getters" class="headerlink" title="Getters"></a>Getters</h2><ul><li>通过Getters获取Store中的值</li></ul><h3 id="定义Getters"><a href="#定义Getters" class="headerlink" title="定义Getters"></a>定义Getters</h3><ul><li>在Store对象中通过<code>getters</code>属性定义Getters</li></ul><figure class="highlight js"><figcaption><span>src/store/home.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useHome = <span class="title function_">defineStore</span>(<span class="string">&quot;home&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">getKey</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.<span class="property">key</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getOther</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="title function_">getKey</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getFn</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> key;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useHome;</span><br></pre></td></tr></table></figure><h4 id="定义Getters获取其他Store中的返回值"><a href="#定义Getters获取其他Store中的返回值" class="headerlink" title="定义Getters获取其他Store中的返回值"></a>定义Getters获取其他Store中的返回值</h4><figure class="highlight js"><figcaption><span>src/store/home.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useHome = <span class="title function_">defineStore</span>(<span class="string">&quot;home&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useHome;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>src/store/other.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"><span class="keyword">import</span> useHome <span class="keyword">from</span> <span class="string">&quot;@/store/home.js&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> homeStore = <span class="title function_">useHome</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useOther = <span class="title function_">defineStore</span>(<span class="string">&quot;other&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">getKey</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> homeStore.<span class="property">key</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useOther;</span><br></pre></td></tr></table></figure><h3 id="获取Getters的返回值"><a href="#获取Getters的返回值" class="headerlink" title="获取Getters的返回值"></a>获取Getters的返回值</h3><h4 id="CompositionAPI-5"><a href="#CompositionAPI-5" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; homeStore.getkey &#125;&#125;</span><br><span class="line">  &#123;&#123; homeStore.getOther &#125;&#125;</span><br><span class="line">  &#123;&#123; homeStore.getFn(&quot;value&quot;) &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import useHome from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h2><h3 id="定义Action"><a href="#定义Action" class="headerlink" title="定义Action"></a>定义Action</h3><figure class="highlight js"><figcaption><span>src/store/home.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> useHome = <span class="title function_">defineStore</span>(<span class="string">&quot;home&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="attr">setKeyAction</span>: <span class="keyword">function</span> (<span class="params">payload</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">key</span> = payload;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> useHome;</span><br></pre></td></tr></table></figure><h3 id="调用Action"><a href="#调用Action" class="headerlink" title="调用Action"></a>调用Action</h3><h4 id="CompositionAPI-6"><a href="#CompositionAPI-6" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useHome &#125; from &quot;@/store/home.js&quot;</span><br><span class="line"></span><br><span class="line">  const homeStore = useHome();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    homeStore.setKeyAction(&quot;value&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Pinia符合直觉的Vue.js状态管理库（&lt;a href=&quot;/302.html?target=https://pinia.vuejs.org/zh/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;通过Pinia实现对Vue项目的状态管理&lt;/p&gt;</summary>
    
    
    
    <category term="Vue学习指北" scheme="https://loli.fj.cn/categories/Vue%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="JavaScript" scheme="https://loli.fj.cn/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://loli.fj.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Vuex学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/13/Vuex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/13/Vuex%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-13T14:35:05.000Z</published>
    <updated>2025-10-25T07:39:44.932Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式 + 库。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。（<a href="/302.html?target=https://vuex.vuejs.org/zh/">官网</a>）</p><p>通过Vuex实现对Vue项目的状态管理</p><span id="more"></span><h2 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vuex</span><br></pre></td></tr></table></figure><h2 id="Store"><a href="#Store" class="headerlink" title="Store"></a>Store</h2><h3 id="定义Store"><a href="#定义Store" class="headerlink" title="定义Store"></a>定义Store</h3><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><h3 id="挂载Store"><a href="#挂载Store" class="headerlink" title="挂载Store"></a>挂载Store</h3><figure class="highlight js"><figcaption><span>src/main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store/index.js&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(store);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="获取Store中的State"><a href="#获取Store中的State" class="headerlink" title="获取Store中的State"></a>获取Store中的State</h3><h4 id="通过template获取Store中的State"><a href="#通过template获取Store中的State" class="headerlink" title="通过template获取Store中的State"></a>通过template获取Store中的State</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $store.state.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="通过script获取Store中的State"><a href="#通过script获取Store中的State" class="headerlink" title="通过script获取Store中的State"></a>通过script获取Store中的State</h4><h5 id="OptionsAPI"><a href="#OptionsAPI" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    created: function () &#123;</span><br><span class="line">      console.log(this.$store.state.key); // &quot;value&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="CompositionAPI"><a href="#CompositionAPI" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  const store = useStore();</span><br><span class="line">  console.log(store.state.key); // &quot;value&quot;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="映射为计算属性"><a href="#映射为计算属性" class="headerlink" title="映射为计算属性"></a>映射为计算属性</h3><h4 id="OptionsAPI-1"><a href="#OptionsAPI-1" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h4><ul><li>通过<code>mapState()</code>将多个状态映射为函数数组，通过展开运算符赋值给计算属性</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapState &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    computed: &#123;</span><br><span class="line">      ...mapState([&quot;key&quot;])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapState &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    computed: &#123;</span><br><span class="line">      ...mapState(&#123;</span><br><span class="line">        key: state =&gt; state.key</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="CompositionAPI-1"><a href="#CompositionAPI-1" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; computed &#125; from &quot;vue&quot;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  const key = computed(() =&gt; store.state.key);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Getters"><a href="#Getters" class="headerlink" title="Getters"></a>Getters</h2><ul><li>通过Getters获取Store中的值</li></ul><h3 id="定义Getters"><a href="#定义Getters" class="headerlink" title="定义Getters"></a>定义Getters</h3><ul><li>在Store对象中通过<code>getters</code>属性定义Getters</li></ul><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">getKey</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.<span class="property">key</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getOther</span>: <span class="keyword">function</span> (<span class="params">state, getters</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> getters.<span class="title function_">getKey</span>();</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getFn</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> key;</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><h3 id="挂载Store-1"><a href="#挂载Store-1" class="headerlink" title="挂载Store"></a>挂载Store</h3><figure class="highlight js"><figcaption><span>src/main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store/index.js&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(store);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="获取Getters的返回值"><a href="#获取Getters的返回值" class="headerlink" title="获取Getters的返回值"></a>获取Getters的返回值</h3><h4 id="通过template获取Getters的返回值"><a href="#通过template获取Getters的返回值" class="headerlink" title="通过template获取Getters的返回值"></a>通过template获取Getters的返回值</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $store.getters.getkey &#125;&#125;</span><br><span class="line">  &#123;&#123; $store.getters.getOther &#125;&#125;</span><br><span class="line">  &#123;&#123; $store.getters.getFn(&quot;value&quot;) &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="通过script获取Getters的返回值"><a href="#通过script获取Getters的返回值" class="headerlink" title="通过script获取Getters的返回值"></a>通过script获取Getters的返回值</h4><h5 id="OptionsAPI-2"><a href="#OptionsAPI-2" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    created: function () &#123;</span><br><span class="line">      console.log(this.$store.getters.getkey); // &quot;value&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="CompositionAPI-2"><a href="#CompositionAPI-2" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  const store = useStore();</span><br><span class="line">  console.log(store.getters.getkey); // &quot;value&quot;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="映射为计算属性-1"><a href="#映射为计算属性-1" class="headerlink" title="映射为计算属性"></a>映射为计算属性</h3><h4 id="OptionsAPI-3"><a href="#OptionsAPI-3" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h4><ul><li>通过<code>mapGetters()</code>将多个状态映射为函数数组，通过展开运算符赋值给计算属性</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapGetters &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    computed: &#123;</span><br><span class="line">      ...mapGetters([&quot;getKey&quot;])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapGetters &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    computed: &#123;</span><br><span class="line">      ...mapGetters(&#123;</span><br><span class="line">        key: getters =&gt; getters.getKey</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="CompositionAPI-3"><a href="#CompositionAPI-3" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; computed &#125; from &quot;vue&quot;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  const key = computed(() =&gt; store.getters.getKey);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Mutation"><a href="#Mutation" class="headerlink" title="Mutation"></a>Mutation</h2><ul><li>通过Mutation修改Store中的值</li><li>Mutation中不要进行异步操作</li></ul><h3 id="定义Mutation"><a href="#定义Mutation" class="headerlink" title="定义Mutation"></a>定义Mutation</h3><ul><li>在Store对象中通过<code>mutations</code>属性定义Mutation</li></ul><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="attr">setKey</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      state.<span class="property">key</span> = <span class="string">&quot;value&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="attr">setKey</span>: <span class="keyword">function</span> (<span class="params">state, payload</span>) &#123;</span><br><span class="line">      state.<span class="property">key</span> = payload;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><h3 id="挂载Store-2"><a href="#挂载Store-2" class="headerlink" title="挂载Store"></a>挂载Store</h3><figure class="highlight js"><figcaption><span>src/main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store/index.js&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(store);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="提交Mutation"><a href="#提交Mutation" class="headerlink" title="提交Mutation"></a>提交Mutation</h3><ul><li>通过提交Mutation以修改Store中的值</li></ul><h4 id="OptionsAPI-4"><a href="#OptionsAPI-4" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function () &#123;</span><br><span class="line">        this.$store.commit(&quot;setKey&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function () &#123;</span><br><span class="line">        this.$store.commit(&quot;setKey&quot;, &quot;value&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="CompositionAPI-4"><a href="#CompositionAPI-4" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    store.commit(&quot;setKey&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    store.commit(&quot;setKey&quot;, &quot;value&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="映射为方法"><a href="#映射为方法" class="headerlink" title="映射为方法"></a>映射为方法</h3><h4 id="OptionsAPI-5"><a href="#OptionsAPI-5" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;setKey&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapMutations &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      ...mapMutations([&quot;setKey&quot;])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;setKey(&#x27;value&#x27;)&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapMutations &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      ...mapMutations([&quot;setKey&quot;])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="CompositionAPI-5"><a href="#CompositionAPI-5" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; mapMutations, useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  const fn = mapMutations([&quot;setKey&quot;])[&quot;setKey&quot;].bind(&#123; $store: store &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn(&#x27;value&#x27;)&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; mapMutations, useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  const fn = mapMutations([&quot;setKey&quot;])[&quot;setKey&quot;].bind(&#123; $store: store &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h2><ul><li>通过在Action中提交Mutation以修改Store中的值</li><li>Action中可以进行异步操作</li></ul><h3 id="定义Action"><a href="#定义Action" class="headerlink" title="定义Action"></a>定义Action</h3><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="attr">setKey</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      state.<span class="property">key</span> = <span class="string">&quot;value&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="attr">setKeyAction</span>: <span class="keyword">function</span> (<span class="params">context</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(context.<span class="property">state</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(context.<span class="property">getters</span>);</span><br><span class="line">      context.<span class="title function_">commit</span>(<span class="string">&quot;setKey&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStore &#125; <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="attr">setKey</span>: <span class="keyword">function</span> (<span class="params">state, payload</span>) &#123;</span><br><span class="line">      state.<span class="property">key</span> = payload;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="attr">setKeyAction</span>: <span class="keyword">function</span> (<span class="params">context, payload</span>) &#123;</span><br><span class="line">      context.<span class="title function_">commit</span>(<span class="string">&quot;setKey&quot;</span>, payload);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure><h3 id="挂载Store-3"><a href="#挂载Store-3" class="headerlink" title="挂载Store"></a>挂载Store</h3><figure class="highlight js"><figcaption><span>src/main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;./store/index.js&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(store);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="派发Action"><a href="#派发Action" class="headerlink" title="派发Action"></a>派发Action</h3><ul><li>通过提交Mutation以修改Store中的值</li></ul><h4 id="OptionsAPI-6"><a href="#OptionsAPI-6" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function () &#123;</span><br><span class="line">        this.$store.dispatch(&quot;setKeyAction&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function () &#123;</span><br><span class="line">        this.$store.dispatch(&quot;setKeyAction&quot;, &quot;value&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="CompositionAPI-6"><a href="#CompositionAPI-6" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    store.dispatch(&quot;setKeyAction&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useStore &#125; from &quot;vuex&quot;</span><br><span class="line"></span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    store.dispatch(&quot;setKeyAction&quot;, &quot;value&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="映射为方法-1"><a href="#映射为方法-1" class="headerlink" title="映射为方法"></a>映射为方法</h3><h4 id="OptionsAPI-7"><a href="#OptionsAPI-7" class="headerlink" title="OptionsAPI"></a>OptionsAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;setKeyAction&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapActions &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      ...mapActions([&quot;setKeyAction&quot;])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;setKeyAction(&#x27;value&#x27;)&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123; mapActions &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      ...mapActions([&quot;setKeyAction&quot;])</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="CompositionAPI-7"><a href="#CompositionAPI-7" class="headerlink" title="CompositionAPI"></a>CompositionAPI</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; mapActions, useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  const fn = mapActions([&quot;setKeyAction&quot;])[&quot;setKeyAction&quot;].bind(&#123; $store: store &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn(&#x27;value&#x27;)&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; mapActions, useStore &#125; from &quot;vuex&quot;</span><br><span class="line">  </span><br><span class="line">  const store = useStore();</span><br><span class="line">  </span><br><span class="line">  const fn = mapActions([&quot;setKeyAction&quot;])[&quot;setKeyAction&quot;].bind(&#123; $store: store &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h2><h3 id="不使用命名空间"><a href="#不使用命名空间" class="headerlink" title="不使用命名空间"></a>不使用命名空间</h3><ul><li>Getters、Mutation、Action都会合并到根命名空间内</li></ul><h4 id="定义Module"><a href="#定义Module" class="headerlink" title="定义Module"></a>定义Module</h4><figure class="highlight js"><figcaption><span>src/store/modules/home.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">getKey</span>: <span class="keyword">function</span> (<span class="params">state, getters, rootState</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.<span class="property">key</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="attr">setKey</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      state.<span class="property">key</span> = <span class="string">&quot;value&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="attr">setKeyAction</span>: <span class="keyword">function</span> (<span class="params">context</span>) &#123;</span><br><span class="line">      context.<span class="title function_">commit</span>(<span class="string">&quot;setKey&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">HomeModule</span> <span class="keyword">from</span> <span class="string">&quot;./module/home.js&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    <span class="attr">home</span>: <span class="title class_">HomeModule</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取Store中的状态"><a href="#获取Store中的状态" class="headerlink" title="获取Store中的状态"></a>获取Store中的状态</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $store.state.home.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="获取Getters的返回值-1"><a href="#获取Getters的返回值-1" class="headerlink" title="获取Getters的返回值"></a>获取Getters的返回值</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $store.getters.getkey &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="提交Mutation-1"><a href="#提交Mutation-1" class="headerlink" title="提交Mutation"></a>提交Mutation</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function () &#123;</span><br><span class="line">        this.$store.commit(&quot;setKey&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="派发Action-1"><a href="#派发Action-1" class="headerlink" title="派发Action"></a>派发Action</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function (&#123; state, commit, rootState&#125;) &#123;</span><br><span class="line">        this.$store.dispatch(&quot;setKeyAction&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="使用命名空间"><a href="#使用命名空间" class="headerlink" title="使用命名空间"></a>使用命名空间</h3><ul><li>Getters、Mutation、Action会放到模块的命名空间内</li></ul><h4 id="定义Module-1"><a href="#定义Module-1" class="headerlink" title="定义Module"></a>定义Module</h4><blockquote><p><code>namespaced</code>：是否启用命名空间</p><blockquote><p><code>false</code>：缺省值，禁用<br><code>true</code>：启用</p></blockquote></blockquote><figure class="highlight js"><figcaption><span>src/store/modules/home.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">state</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">    <span class="attr">getKey</span>: <span class="keyword">function</span> (<span class="params">state, getters, rootState</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> state.<span class="property">key</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">    <span class="attr">setKey</span>: <span class="keyword">function</span> (<span class="params">state</span>) &#123;</span><br><span class="line">      state.<span class="property">key</span> = <span class="string">&quot;value&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">    <span class="attr">setKeyAction</span>: <span class="keyword">function</span> (<span class="params">context</span>) &#123;</span><br><span class="line">      context.<span class="title function_">commit</span>(<span class="string">&quot;setKey&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>src/store/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">HomeModule</span> <span class="keyword">from</span> <span class="string">&quot;./module/home.js&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    <span class="attr">home</span>: <span class="title class_">HomeModule</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="获取Store中的状态-1"><a href="#获取Store中的状态-1" class="headerlink" title="获取Store中的状态"></a>获取Store中的状态</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $store.state.home.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="获取Getters的返回值-2"><a href="#获取Getters的返回值-2" class="headerlink" title="获取Getters的返回值"></a>获取Getters的返回值</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $store.getters[&quot;home/getkey&quot;] &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="提交Mutation-2"><a href="#提交Mutation-2" class="headerlink" title="提交Mutation"></a>提交Mutation</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function () &#123;</span><br><span class="line">        this.$store.commit(&quot;home/setKey&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="提交根命名空间的Mutation"><a href="#提交根命名空间的Mutation" class="headerlink" title="提交根命名空间的Mutation"></a>提交根命名空间的Mutation</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function () &#123;</span><br><span class="line">        this.$store.commit(&quot;setKey&quot;, null, &#123; root: true &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="派发Action-2"><a href="#派发Action-2" class="headerlink" title="派发Action"></a>派发Action</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function (&#123; state, commit, rootState&#125;) &#123;</span><br><span class="line">        this.$store.dispatch(&quot;home/setKeyAction&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h5 id="派发根命名空间的Action"><a href="#派发根命名空间的Action" class="headerlink" title="派发根命名空间的Action"></a>派发根命名空间的Action</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  export default &#123;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      fn: function (&#123; state, commit, rootState&#125;) &#123;</span><br><span class="line">        this.$store.dispatch(&quot;setKeyAction&quot;, null, &#123; root: true &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式 + 库。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。（&lt;a href=&quot;/302.html?target=https://vuex.vuejs.org/zh/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;通过Vuex实现对Vue项目的状态管理&lt;/p&gt;</summary>
    
    
    
    <category term="Vue学习指北" scheme="https://loli.fj.cn/categories/Vue%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="JavaScript" scheme="https://loli.fj.cn/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://loli.fj.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】JOOQ学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/07/JOOQ%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/07/JOOQ%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-07T09:44:13.000Z</published>
    <updated>2025-10-25T07:39:44.876Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>jOOQ generates Java code from your database and lets you build type safe SQL queries through its fluent API.（<a href="/302.html?target=https://www.jooq.org">官网</a>）</p><span id="more"></span><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jooq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jooq<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.19.26<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.10.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">source</span>&gt;</span>17<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">target</span>&gt;</span>17<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建连接对象"><a href="#创建连接对象" class="headerlink" title="创建连接对象"></a>创建连接对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Connection</span> <span class="variable">connection</span> <span class="operator">=</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/database&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;password&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="创建上下文对象"><a href="#创建上下文对象" class="headerlink" title="创建上下文对象"></a>创建上下文对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">DSLContext</span> <span class="variable">dslContext</span> <span class="operator">=</span> DSL.using(connection, SQLDialect.MYSQL);</span><br></pre></td></tr></table></figure><h2 id="JOOQ实现增删改查"><a href="#JOOQ实现增删改查" class="headerlink" title="JOOQ实现增删改查"></a>JOOQ实现增删改查</h2><h2 id="增"><a href="#增" class="headerlink" title="增"></a>增</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dslContext.insertInto(DSL.table(<span class="string">&quot;table_name&quot;</span>))</span><br><span class="line">        .columns(DSL.field(<span class="string">&quot;field_name_1&quot;</span>), DSL.field(<span class="string">&quot;field_name_2&quot;</span>))</span><br><span class="line">        .values(<span class="string">&quot;value_1&quot;</span>, <span class="string">&quot;value_2&quot;</span>)</span><br><span class="line">        .execute();</span><br></pre></td></tr></table></figure><h2 id="删"><a href="#删" class="headerlink" title="删"></a>删</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dslContext.deleteFrom(DSL.table(<span class="string">&quot;table_name&quot;</span>))</span><br><span class="line">        .where(DSL.field(<span class="string">&quot;field_name_1&quot;</span>).eq(<span class="number">1</span>))</span><br><span class="line">        .execute();</span><br></pre></td></tr></table></figure><h2 id="改"><a href="#改" class="headerlink" title="改"></a>改</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pdate(DSL.table(<span class="string">&quot;table_name&quot;</span>))</span><br><span class="line">        .set(DSL.field(<span class="string">&quot;field_name_2&quot;</span>), <span class="string">&quot;value&quot;</span>)</span><br><span class="line">        .where(DSL.field(<span class="string">&quot;field_name_1&quot;</span>).eq(<span class="number">1</span>))</span><br><span class="line">        .execute();</span><br></pre></td></tr></table></figure><h2 id="查"><a href="#查" class="headerlink" title="查"></a>查</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Result&lt;Record&gt; result = dslContext.select()</span><br><span class="line">        .from(DSL.table(<span class="string">&quot;table_name&quot;</span>))</span><br><span class="line">        .where(DSL.field(<span class="string">&quot;field_name_1&quot;</span>).eq(<span class="number">1</span>))</span><br><span class="line">        .fetch();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Record record : result) &#123;</span><br><span class="line">    System.out.println(record.getValue(<span class="string">&quot;field_name_1&quot;</span>));</span><br><span class="line">    System.out.println(record.getValue(<span class="string">&quot;field_name_2&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1by421v7WS">哔哩哔哩——程序指南</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;jOOQ generates Java code from your database and lets you build type safe SQL queries through its fluent API.（&lt;a href=&quot;/302.html?target=https://www.jooq.org&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://loli.fj.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】SpringBoot项目通过EasyExcel返回Excel文件给前端</title>
    <link href="https://loli.fj.cn/2025/10/07/SpringBoot%E9%A1%B9%E7%9B%AE%E9%80%9A%E8%BF%87EasyExcel%E8%BF%94%E5%9B%9EExcel%E6%96%87%E4%BB%B6%E7%BB%99%E5%89%8D%E7%AB%AF/"/>
    <id>https://loli.fj.cn/2025/10/07/SpringBoot%E9%A1%B9%E7%9B%AE%E9%80%9A%E8%BF%87EasyExcel%E8%BF%94%E5%9B%9EExcel%E6%96%87%E4%BB%B6%E7%BB%99%E5%89%8D%E7%AB%AF/</id>
    <published>2025-10-07T08:49:56.000Z</published>
    <updated>2025-10-25T07:39:44.924Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目通过EasyExcel返回Excel文件给前端</p><span id="more"></span><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="固定表头"><a href="#固定表头" class="headerlink" title="固定表头"></a>固定表头</h2><h3 id="定义实体类"><a href="#定义实体类" class="headerlink" title="定义实体类"></a>定义实体类</h3><blockquote><p><code>@ExcelProperty(&quot;&quot;)</code>：定义表头</p><blockquote><p><code>value = &quot;&quot;</code>：定义表头<br><code>index = 0</code>：定义表头索引，默认按照属性定义顺序作为表头顺序</p></blockquote><p><code>@ColumnWidth(40)</code>：定义列宽度</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserExcelDTO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;第一列&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String first;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExcelProperty(&quot;第二列&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String last;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;UserExcelDTO&gt; <span class="title function_">exportUser</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;UserExcelDTO&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">UserExcelDTO</span>(<span class="string">&quot;第一行第一列值&quot;</span>, <span class="string">&quot;第一行第二列值&quot;</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> <span class="title class_">UserExcelDTO</span>(<span class="string">&quot;第二行第一列值&quot;</span>, <span class="string">&quot;第二行第二列值&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="返回Excel文件给前端"><a href="#返回Excel文件给前端" class="headerlink" title="返回Excel文件给前端"></a>返回Excel文件给前端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/exportUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exportUser</span><span class="params">(HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="comment">// 查询数据</span></span><br><span class="line">        List&lt;UserExcelDTO&gt; data = userService.exportUser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置响应头</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> URLEncoder.encode(<span class="string">&quot;文件名&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>).replaceAll(<span class="string">&quot;\\+&quot;</span>, <span class="string">&quot;%20&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-disposition&quot;</span>, <span class="string">&quot;attachment;filename*=utf-8&#x27;&#x27;&quot;</span> + fileName + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回数据</span></span><br><span class="line">        EasyExcel.write(response.getOutputStream(), UserExcelDTO.class)</span><br><span class="line">                .sheet(<span class="string">&quot;表名&quot;</span>)</span><br><span class="line">                .doWrite(data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态表头"><a href="#动态表头" class="headerlink" title="动态表头"></a>动态表头</h2><h3 id="定义实体类-1"><a href="#定义实体类-1" class="headerlink" title="定义实体类"></a>定义实体类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExcelDTO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;List&lt;String&gt;&gt; head;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;List&lt;Object&gt;&gt; data;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加表头和数据"><a href="#添加表头和数据" class="headerlink" title="添加表头和数据"></a>添加表头和数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ExcelDTO <span class="title function_">exportUser</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">// 添加表头</span></span><br><span class="line">        List&lt;List&lt;String&gt;&gt; head = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        head.add(Arrays.asList(<span class="string">&quot;第一列&quot;</span>, <span class="string">&quot;第二列&quot;</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 添加数据</span></span><br><span class="line">        List&lt;List&lt;Object&gt;&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        data.add(Arrays.asList(<span class="string">&quot;第一行第一列值&quot;</span>, <span class="string">&quot;第一行第二列值&quot;</span>));</span><br><span class="line">        data.add(Arrays.asList(<span class="string">&quot;第二行第一列值&quot;</span>, <span class="string">&quot;第二行第二列值&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回表头和数据</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ExcelDTO</span>(head, data);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="返回Excel文件给前端-1"><a href="#返回Excel文件给前端-1" class="headerlink" title="返回Excel文件给前端"></a>返回Excel文件给前端</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/exportUser&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exportUser</span><span class="params">(HttpServletResponse response)</span> &#123;</span><br><span class="line">        <span class="comment">// 查询数据</span></span><br><span class="line">        <span class="type">ExcelDTO</span> <span class="variable">excelDTO</span> <span class="operator">=</span> userService.exportUser();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置响应头</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;</span>);</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> URLEncoder.encode(<span class="string">&quot;文件名&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>).replaceAll(<span class="string">&quot;\\+&quot;</span>, <span class="string">&quot;%20&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-disposition&quot;</span>, <span class="string">&quot;attachment;filename*=utf-8&#x27;&#x27;&quot;</span> + fileName + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回数据</span></span><br><span class="line">        EasyExcel.write(response.getOutputStream())</span><br><span class="line">                .head(excelDTO.head)</span><br><span class="line">                .sheet(<span class="string">&quot;表名&quot;</span>)</span><br><span class="line">                .doWrite(excelDTO.data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目通过EasyExcel返回Excel文件给前端&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://loli.fj.cn/tags/Java/"/>
    
    <category term="Office" scheme="https://loli.fj.cn/tags/Office/"/>
    
    <category term="Spring" scheme="https://loli.fj.cn/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://loli.fj.cn/tags/SpringBoot/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】POI学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/07/POI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/07/POI%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-07T07:37:01.000Z</published>
    <updated>2025-10-25T07:39:44.906Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Apache POI - the Java API for Microsoft Documents（<a href="/302.html?target=https://poi.apache.org">官网</a>）</p><span id="more"></span><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi-ooxml<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建Excel文件对象"><a href="#创建Excel文件对象" class="headerlink" title="创建Excel文件对象"></a>创建Excel文件对象</h2><h3 id="xls"><a href="#xls" class="headerlink" title="xls"></a>xls</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HSSFWorkbook</span>();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;&lt;file&gt;.xls&quot;</span>);</span><br><span class="line"><span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HSSFWorkbook</span>(fis);</span><br></pre></td></tr></table></figure><h3 id="xlsx"><a href="#xlsx" class="headerlink" title="xlsx"></a>xlsx</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;&lt;file&gt;.xls&quot;</span>);</span><br><span class="line"><span class="type">Workbook</span> <span class="variable">workbook</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">XSSFWorkbook</span>(fis);</span><br></pre></td></tr></table></figure><h2 id="工作簿"><a href="#工作簿" class="headerlink" title="工作簿"></a>工作簿</h2><h3 id="新增工作簿"><a href="#新增工作簿" class="headerlink" title="新增工作簿"></a>新增工作簿</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> workbook.createSheet(<span class="string">&quot;Sheet1&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="获取工作簿"><a href="#获取工作簿" class="headerlink" title="获取工作簿"></a>获取工作簿</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Sheet</span> <span class="variable">sheet</span> <span class="operator">=</span> workbook.getSheet(<span class="string">&quot;Sheet1&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="行"><a href="#行" class="headerlink" title="行"></a>行</h2><h3 id="创建行"><a href="#创建行" class="headerlink" title="创建行"></a>创建行</h3><blockquote><p><code>&lt;index&gt;</code>：索引，从0开始</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Row</span> <span class="variable">row</span> <span class="operator">=</span> sheet.createRow(&lt;index&gt;);</span><br></pre></td></tr></table></figure><h3 id="获取行"><a href="#获取行" class="headerlink" title="获取行"></a>获取行</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Row</span> <span class="variable">row</span> <span class="operator">=</span> sheet.getRow(&lt;index&gt;);</span><br></pre></td></tr></table></figure><h3 id="获取所有行数"><a href="#获取所有行数" class="headerlink" title="获取所有行数"></a>获取所有行数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">rowCount</span> <span class="operator">=</span> sheet.getPhysicalNumberOfRows();</span><br></pre></td></tr></table></figure><h2 id="列"><a href="#列" class="headerlink" title="列"></a>列</h2><h3 id="创建单元格"><a href="#创建单元格" class="headerlink" title="创建单元格"></a>创建单元格</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Cell</span> <span class="variable">cell</span> <span class="operator">=</span> row.createCell(&lt;index&gt;);</span><br></pre></td></tr></table></figure><h3 id="获取单元格"><a href="#获取单元格" class="headerlink" title="获取单元格"></a>获取单元格</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Cell</span> <span class="variable">cell</span> <span class="operator">=</span> row.getCell(&lt;index&gt;);</span><br></pre></td></tr></table></figure><h3 id="单元格内容"><a href="#单元格内容" class="headerlink" title="单元格内容"></a>单元格内容</h3><h4 id="设置单元格内容"><a href="#设置单元格内容" class="headerlink" title="设置单元格内容"></a>设置单元格内容</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cell.setCellValue(<span class="string">&quot;文本内容&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="获取单元格内容"><a href="#获取单元格内容" class="headerlink" title="获取单元格内容"></a>获取单元格内容</h4><h5 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">cellValue</span> <span class="operator">=</span> cell.getStringCellValue();</span><br></pre></td></tr></table></figure><h5 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">double</span> <span class="variable">cellValue</span> <span class="operator">=</span> cell.getNumericCellValue();</span><br></pre></td></tr></table></figure><h5 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">cellValue</span> <span class="operator">=</span> cell.getBooleanCellValue();</span><br></pre></td></tr></table></figure><h4 id="修改单元格数据类型"><a href="#修改单元格数据类型" class="headerlink" title="修改单元格数据类型"></a>修改单元格数据类型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cell.setCellType(HSSFCell.CELL_TYPE_STRING);</span><br></pre></td></tr></table></figure><h4 id="获取单元格数据类型"><a href="#获取单元格数据类型" class="headerlink" title="获取单元格数据类型"></a>获取单元格数据类型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">cellType</span> <span class="operator">=</span> cell.getCellType();</span><br></pre></td></tr></table></figure><h5 id="根据单元格数据类型获取单元格内容"><a href="#根据单元格数据类型获取单元格内容" class="headerlink" title="根据单元格数据类型获取单元格内容"></a>根据单元格数据类型获取单元格内容</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (cellType) &#123;</span><br><span class="line">    <span class="keyword">case</span> HSSFCell.CELL_TYPE_STRING:</span><br><span class="line">        <span class="type">String</span> <span class="variable">cellValue</span> <span class="operator">=</span> cell.getStringCellValue();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> HSSFCell.CELL_TYPE_NUMERIC:</span><br><span class="line">        <span class="type">double</span> <span class="variable">cellValue</span> <span class="operator">=</span> cell.getNumericCellValue();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> HSSFCell.CELL_TYPE_BOOLEAN:</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">cellValue</span> <span class="operator">=</span> cell.getBooleanCellValue();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取所有列数"><a href="#获取所有列数" class="headerlink" title="获取所有列数"></a>获取所有列数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">cellCount</span> <span class="operator">=</span> row.getPhysicalNumberOfCells();</span><br></pre></td></tr></table></figure><h2 id="保存文件"><a href="#保存文件" class="headerlink" title="保存文件"></a>保存文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileOutputStream</span> <span class="variable">fos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(<span class="string">&quot;&lt;file&gt;.xls&quot;</span>);</span><br><span class="line">workbook.write(fos);</span><br><span class="line">fos.close();</span><br></pre></td></tr></table></figure><h2 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;&lt;file&gt;.xls&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1B33BzUERz/">哔哩哔哩——Java大联盟</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Apache POI - the Java API for Microsoft Documents（&lt;a href=&quot;/302.html?target=https://poi.apache.org&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://loli.fj.cn/tags/Java/"/>
    
    <category term="Office" scheme="https://loli.fj.cn/tags/Office/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】VueRouter学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/06/VueRouter%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/06/VueRouter%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-06T13:34:36.000Z</published>
    <updated>2025-10-25T07:39:44.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Vue3通过vue-router实现路由</p><span id="more"></span><h2 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router</span><br></pre></td></tr></table></figure><h2 id="创建路由对象"><a href="#创建路由对象" class="headerlink" title="创建路由对象"></a>创建路由对象</h2><h3 id="配置模式"><a href="#配置模式" class="headerlink" title="配置模式"></a>配置模式</h3><h4 id="哈希模式"><a href="#哈希模式" class="headerlink" title="哈希模式"></a>哈希模式</h4><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/#/home</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>()</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="历史模式"><a href="#历史模式" class="headerlink" title="历史模式"></a>历史模式</h4><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/home</span><br></pre></td></tr></table></figure><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>()</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="配置路由"><a href="#配置路由" class="headerlink" title="配置路由"></a>配置路由</h3><blockquote><p><code>name</code>：指定路由名，必须绝对唯一<br><code>path</code>：指定路由路径<br><code>component</code>：指定组件<br><code>meta</code>：跳转路由时携带元数据作为参数</p></blockquote><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span>,</span><br><span class="line">      <span class="attr">meta</span>: &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&quot;value&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="重定向到其他路由"><a href="#重定向到其他路由" class="headerlink" title="重定向到其他路由"></a>重定向到其他路由</h4><ul><li>通过<code>redirect</code>重定向到其他路由</li></ul><blockquote><p><code>redirect</code>：重定向到其他路由</p></blockquote><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/home&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="正则匹配"><a href="#正则匹配" class="headerlink" title="正则匹配"></a>正则匹配</h4><blockquote><p><code>/:pathMatch(.*)</code>：匹配一级<br><code>/:pathMatch(.*)*</code>：匹配多级</p></blockquote><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123; </span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/:pathMatch(.*)*&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="动态路由"><a href="#动态路由" class="headerlink" title="动态路由"></a>动态路由</h4><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home/:id&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h4><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/father&quot;</span>,</span><br><span class="line">      <span class="attr">redirect</span>: <span class="string">&quot;/father/son&quot;</span>,</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;son&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="Webpack打包时分包"><a href="#Webpack打包时分包" class="headerlink" title="Webpack打包时分包"></a>Webpack打包时分包</h4><blockquote><p><code>webpackChunkName</code>：通过<strong>魔法注释</strong>自定义打包后的文件名前缀</p></blockquote><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: &quot;home&quot; */</span><span class="string">&quot;../Views/Home.vue&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h2 id="挂载路由对象"><a href="#挂载路由对象" class="headerlink" title="挂载路由对象"></a>挂载路由对象</h2><figure class="highlight js"><figcaption><span>src/main.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router/index.js&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(router);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="跳转路由"><a href="#跳转路由" class="headerlink" title="跳转路由"></a>跳转路由</h2><h3 id="通过template跳转路由"><a href="#通过template跳转路由" class="headerlink" title="通过template跳转路由"></a>通过template跳转路由</h3><ul><li>通过<code>&lt;router-link&gt;&lt;/router-link&gt;</code>跳转路由</li><li>通过<code>&lt;router-view&gt;&lt;/router-view&gt;</code>渲染路由</li></ul><blockquote><p><code>router-link</code>：跳转路由</p><blockquote><p><code>to=&quot;&quot;</code>：指定目标，可以传递字符串，也可以传递对象<br><code>replace</code>：替换路由并不保留历史<br><code>active-class=&quot;&quot;</code>：指定活跃的路由的类名</p></blockquote></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link to=&quot;/home&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">  &lt;router-link v-bind:to=&quot;&#123; path: &#x27;/home&#x27; &#125;&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">  &lt;router-link to=&quot;/home&quot; replace&gt;首页&lt;/router-link&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="嵌套路由-1"><a href="#嵌套路由-1" class="headerlink" title="嵌套路由"></a>嵌套路由</h4><ul><li>通过<code>&lt;router-link&gt;&lt;/router-link&gt;</code>跳转路由</li><li>通过<code>&lt;router-view&gt;&lt;/router-view&gt;</code>渲染路由</li></ul><figure class="highlight plaintext"><figcaption><span>src/App.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link to=&quot;/father/son&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">  </span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="通过script跳转路由"><a href="#通过script跳转路由" class="headerlink" title="通过script跳转路由"></a>通过script跳转路由</h3><h4 id="有历史记录的跳转"><a href="#有历史记录的跳转" class="headerlink" title="有历史记录的跳转"></a>有历史记录的跳转</h4><blockquote><p><code>name</code>：通过<code>name</code>跳转路由<br><code>path</code>：通过路径跳转路由<br><code>query</code>：跳转路由时携带查询字符串</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRouter &#125; from &quot;vue-router&quot;</span><br><span class="line"></span><br><span class="line">  const router = useRouter();</span><br><span class="line"></span><br><span class="line">  router.push(&#123;</span><br><span class="line">    path: &quot;/home&quot;,</span><br><span class="line">    query: &#123;</span><br><span class="line">      key: &quot;value&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>简写</li></ul><figure class="highlight plaintext"><figcaption><span>src/App.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRouter &#125; from &quot;vue-router&quot;</span><br><span class="line">  </span><br><span class="line">  const router = useRouter();</span><br><span class="line">  </span><br><span class="line">  router.push(&quot;/home&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="无历史记录的跳转"><a href="#无历史记录的跳转" class="headerlink" title="无历史记录的跳转"></a>无历史记录的跳转</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRouter &#125; from &quot;vue-router&quot;</span><br><span class="line"></span><br><span class="line">  const router = useRouter();</span><br><span class="line"></span><br><span class="line">  router.replace(&#123;</span><br><span class="line">    path: &quot;/home&quot;,</span><br><span class="line">    query: &#123;</span><br><span class="line">      key: &quot;value&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>简写</li></ul><figure class="highlight plaintext"><figcaption><span>src/App.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRouter &#125; from &quot;vue-router&quot;</span><br><span class="line">  </span><br><span class="line">  const router = useRouter();</span><br><span class="line">  </span><br><span class="line">  router.replace(&quot;/home&quot;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="向后"><a href="#向后" class="headerlink" title="向后"></a>向后</h4><figure class="highlight plaintext"><figcaption><span>src/App.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;首页&lt;/div&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRouter &#125; from &quot;vue-router&quot;</span><br><span class="line">  </span><br><span class="line">  const router = useRouter();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    router.back();</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="向前"><a href="#向前" class="headerlink" title="向前"></a>向前</h4><figure class="highlight plaintext"><figcaption><span>src/App.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;首页&lt;/div&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRouter &#125; from &quot;vue-router&quot;</span><br><span class="line">  </span><br><span class="line">  const router = useRouter();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    router.forward();</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="自定义层级"><a href="#自定义层级" class="headerlink" title="自定义层级"></a>自定义层级</h4><blockquote><p><code>&lt;num&gt;</code>：正数向前，负数向后，数值表示层级</p></blockquote><figure class="highlight plaintext"><figcaption><span>src/App.vue</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-on:click=&quot;fn&quot;&gt;首页&lt;/div&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRouter &#125; from &quot;vue-router&quot;</span><br><span class="line">  </span><br><span class="line">  const router = useRouter();</span><br><span class="line">  </span><br><span class="line">  function fn() &#123;</span><br><span class="line">    router.go(&lt;num&gt;);</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="获取参数"><a href="#获取参数" class="headerlink" title="获取参数"></a>获取参数</h2><h3 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h3><h4 id="通过template获取参数"><a href="#通过template获取参数" class="headerlink" title="通过template获取参数"></a>通过template获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $router.meta.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="通过script获取参数"><a href="#通过script获取参数" class="headerlink" title="通过script获取参数"></a>通过script获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRoute, onBeforeRouteUpdate &#125; from &quot;vue-router&quot;</span><br><span class="line">  </span><br><span class="line">  onBeforeRouteUpdate(() =&gt; &#123;</span><br><span class="line">    const route = useRoute();</span><br><span class="line">    console.log(route.meta.key);</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="正则匹配-1"><a href="#正则匹配-1" class="headerlink" title="正则匹配"></a>正则匹配</h3><ul><li>获取正则匹配到的路由路径</li></ul><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/value1/value2</span><br></pre></td></tr></table></figure><h4 id="通过template获取参数-1"><a href="#通过template获取参数-1" class="headerlink" title="通过template获取参数"></a>通过template获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $router.params.pathMatch &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="通过script获取参数-1"><a href="#通过script获取参数-1" class="headerlink" title="通过script获取参数"></a>通过script获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRoute, onBeforeRouteUpdate &#125; from &quot;vue-router&quot;</span><br><span class="line">  </span><br><span class="line">  onBeforeRouteUpdate(() =&gt; &#123;</span><br><span class="line">    const route = useRoute();</span><br><span class="line">    console.log(route.params.pathMatch); // [&quot;value1&quot;, &quot;value2&quot;]</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="动态路由参数"><a href="#动态路由参数" class="headerlink" title="动态路由参数"></a>动态路由参数</h3><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/home/value</span><br></pre></td></tr></table></figure><h4 id="通过template获取参数-2"><a href="#通过template获取参数-2" class="headerlink" title="通过template获取参数"></a>通过template获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $router.params.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="通过script获取参数-2"><a href="#通过script获取参数-2" class="headerlink" title="通过script获取参数"></a>通过script获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRoute, onBeforeRouteUpdate &#125; from &quot;vue-router&quot;</span><br><span class="line"></span><br><span class="line">  onBeforeRouteUpdate(() =&gt; &#123;</span><br><span class="line">    const route = useRoute();</span><br><span class="line">    console.log(route.params.key); // &quot;value&quot;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="查询字符串"><a href="#查询字符串" class="headerlink" title="查询字符串"></a>查询字符串</h3><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/home?key=value</span><br></pre></td></tr></table></figure><h4 id="通过template获取参数-3"><a href="#通过template获取参数-3" class="headerlink" title="通过template获取参数"></a>通过template获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &#123;&#123; $router.query.key &#125;&#125;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h4 id="通过script获取参数-3"><a href="#通过script获取参数-3" class="headerlink" title="通过script获取参数"></a>通过script获取参数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">  import &#123; useRoute, onBeforeRouteUpdate &#125; from &quot;vue-router&quot;</span><br><span class="line"></span><br><span class="line">  onBeforeRouteUpdate(() =&gt; &#123;</span><br><span class="line">    const route = useRoute();</span><br><span class="line">    console.log(route.query.key); // &quot;value&quot;</span><br><span class="line">  &#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="活跃的路由样式"><a href="#活跃的路由样式" class="headerlink" title="活跃的路由样式"></a>活跃的路由样式</h2><ul><li>根据活跃的路由的类名修改路由样式</li></ul><blockquote><p><code>.router-link-active</code>：对于多级路由会匹配前缀<br><code>.router-link-exact-active</code>：对于多级路由会进行精准匹配</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-link to=&quot;/home&quot;&gt;首页&lt;/router-link&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">  .router-link-active &#123;</span><br><span class="line">    color: red;</span><br><span class="line">  &#125;</span><br><span class="line">  .router-link-exact-active &#123;</span><br><span class="line">    color: blue;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="对路由的操作"><a href="#对路由的操作" class="headerlink" title="对路由的操作"></a>对路由的操作</h2><h3 id="添加路由"><a href="#添加路由" class="headerlink" title="添加路由"></a>添加路由</h3><h4 id="添加一级路由"><a href="#添加一级路由" class="headerlink" title="添加一级路由"></a>添加一级路由</h4><ul><li>如果路由的name重名，则路由会被替换</li></ul><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">addRoute</span>(&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&quot;/other&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="通过路由name添加子级路由"><a href="#通过路由name添加子级路由" class="headerlink" title="通过路由name添加子级路由"></a>通过路由name添加子级路由</h4><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">addRoute</span>(<span class="string">&quot;name&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&quot;/other&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="删除路由"><a href="#删除路由" class="headerlink" title="删除路由"></a>删除路由</h3><h4 id="通过路由的name删除路由"><a href="#通过路由的name删除路由" class="headerlink" title="通过路由的name删除路由"></a>通过路由的name删除路由</h4><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">removeRoute</span>(<span class="string">&quot;name&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h4 id="通过添加路由时的返回值删除路由"><a href="#通过添加路由时的返回值删除路由" class="headerlink" title="通过添加路由时的返回值删除路由"></a>通过添加路由时的返回值删除路由</h4><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加路由</span></span><br><span class="line"><span class="keyword">const</span> callback = router.<span class="title function_">addRoute</span>(&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&quot;/other&quot;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除路由</span></span><br><span class="line"><span class="title function_">callback</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h3 id="获取路由对象数组"><a href="#获取路由对象数组" class="headerlink" title="获取路由对象数组"></a>获取路由对象数组</h3><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> result = router.<span class="title function_">getRoutes</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h2 id="路由导航守卫"><a href="#路由导航守卫" class="headerlink" title="路由导航守卫"></a>路由导航守卫</h2><ul><li>通过守卫拦截路由跳转的过程</li></ul><h3 id="前置守卫"><a href="#前置守卫" class="headerlink" title="前置守卫"></a>前置守卫</h3><ul><li>回调函数的返回值如果为字符串，则表示跳转指定name的路由</li><li>回调函数的返回值如果为<code>false</code>，则表示取消当前跳转</li><li>回调函数的返回值如果为<code>true</code>、<code>undefined</code>或没有定义返回值，则表示允许当前跳转</li><li>回调函数的返回值如果为路径字符串，则表示直接跳转到指定路径</li><li>回调函数的返回值如果为路由对象，则表示直接跳转到指定路由</li><li>也可以通过<code>next(&quot;&quot;)</code>指定需要跳转的路由路径或对象</li></ul><figure class="highlight js"><figcaption><span>src/router/index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../Views/Home.vue&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;name&quot;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="title class_">Home</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;name&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Vue3通过vue-router实现路由&lt;/p&gt;</summary>
    
    
    
    <category term="Vue学习指北" scheme="https://loli.fj.cn/categories/Vue%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8C%97/"/>
    
    
    <category term="JavaScript" scheme="https://loli.fj.cn/tags/JavaScript/"/>
    
    <category term="Vue" scheme="https://loli.fj.cn/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】SpringBoot项目整合JOOQ</title>
    <link href="https://loli.fj.cn/2025/10/06/SpringBoot%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88JOOQ/"/>
    <id>https://loli.fj.cn/2025/10/06/SpringBoot%E9%A1%B9%E7%9B%AE%E6%95%B4%E5%90%88JOOQ/</id>
    <published>2025-10-06T08:01:25.000Z</published>
    <updated>2025-10-25T07:39:44.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>SpringBoot项目整合JOOQ学习笔记</p><span id="more"></span><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><figcaption><span>pom.xml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jooq<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><figure class="highlight yaml"><figcaption><span>src/main/resources/application.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/database</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">password</span></span><br></pre></td></tr></table></figure><h2 id="配置类"><a href="#配置类" class="headerlink" title="配置类"></a>配置类</h2><figure class="highlight java"><figcaption><span>src/main/java/com/config/JooqConfig.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jooq.DSLContext;</span><br><span class="line"><span class="keyword">import</span> org.jooq.SQLDialect;</span><br><span class="line"><span class="keyword">import</span> org.jooq.impl.DSL;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JooqConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DSLContext <span class="title function_">dslContext</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> DSL.using(dataSource, SQLDialect.MYSQL);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h2><figure class="highlight java"><figcaption><span>src/main/java/com/dao/UserDao.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.jooq.DSLContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDAO</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DSLContext dslContext;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.bilibili.com/video/BV1LY4y1N7qb/">哔哩哔哩——Will保哥</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;SpringBoot项目整合JOOQ学习笔记&lt;/p&gt;</summary>
    
    
    
    
    <category term="Java" scheme="https://loli.fj.cn/tags/Java/"/>
    
    <category term="Spring" scheme="https://loli.fj.cn/tags/Spring/"/>
    
    <category term="SpringBoot" scheme="https://loli.fj.cn/tags/SpringBoot/"/>
    
    <category term="JOOQ" scheme="https://loli.fj.cn/tags/JOOQ/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】JSONP学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/06/JSONP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/06/JSONP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-06T07:10:12.000Z</published>
    <updated>2025-10-25T07:39:44.876Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不通过AJAX发送异步请求，而是构造一个<code>&lt;script&gt;&lt;/script&gt;</code>标签，指定<code>src</code>属性，来发送请求</p><span id="more"></span><h2 id="准备服务器"><a href="#准备服务器" class="headerlink" title="准备服务器"></a>准备服务器</h2><ul><li>准备服务器，执行<code>callback()</code>函数，并将需要传递的数据通过参数传递给<code>callback()</code>函数</li></ul><figure class="highlight js"><figcaption><span>app.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义端口号</span></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">8080</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">const</span> app = http.<span class="title function_">createServer</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义路由，处理请求</span></span><br><span class="line">app.<span class="title function_">on</span>(<span class="string">&quot;/list&quot;</span>, <span class="keyword">function</span> (<span class="params">req, resp</span>) &#123;</span><br><span class="line">  <span class="comment">// 接收请求，返回响应</span></span><br><span class="line">  resp.<span class="title function_">end</span>(<span class="string">`</span></span><br><span class="line"><span class="string">    callback([&quot;data1&quot;, &quot;data2&quot;])</span></span><br><span class="line"><span class="string">  `</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定端口，启动服务器</span></span><br><span class="line">app.<span class="title function_">listen</span>(port, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 启动成功后执行的代码</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`http://127.0.0.1:<span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js</span><br></pre></td></tr></table></figure><h2 id="构造script标签"><a href="#构造script标签" class="headerlink" title="构造script标签"></a>构造script标签</h2><figure class="highlight js"><figcaption><span>index.js</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义处理数据的`callback()`回调函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">callback</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构造script标签</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">doRequest</span>(<span class="params">url</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;script&quot;</span>);</span><br><span class="line">  script.<span class="property">src</span> = url;</span><br><span class="line">  <span class="comment">// 发送请求后立即删除标签</span></span><br><span class="line">  script.<span class="property">onload</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    script.<span class="title function_">remove</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(script);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送请求</span></span><br><span class="line"><span class="title function_">doRequest</span>(<span class="string">&quot;http://127.0.0.1:8080/list&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.bilibili.com/video/BV1XX4y1Y7Eh/">哔哩哔哩——渡一前端公开大师课</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;不通过AJAX发送异步请求，而是构造一个&lt;code&gt;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;标签，指定&lt;code&gt;src&lt;/code&gt;属性，来发送请求&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】CORS响应头</title>
    <link href="https://loli.fj.cn/2025/10/05/CORS%E5%93%8D%E5%BA%94%E5%A4%B4/"/>
    <id>https://loli.fj.cn/2025/10/05/CORS%E5%93%8D%E5%BA%94%E5%A4%B4/</id>
    <published>2025-10-05T13:24:34.000Z</published>
    <updated>2025-10-25T07:39:44.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CORS响应头学习笔记</p><span id="more"></span><h2 id="设置允许跨域"><a href="#设置允许跨域" class="headerlink" title="设置允许跨域"></a>设置允许跨域</h2><h3 id="允许指定域的跨域请求"><a href="#允许指定域的跨域请求" class="headerlink" title="允许指定域的跨域请求"></a>允许指定域的跨域请求</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: http://127.0.0.1:80</span><br></pre></td></tr></table></figure><h3 id="允许任何域的跨域请求"><a href="#允许任何域的跨域请求" class="headerlink" title="允许任何域的跨域请求"></a>允许任何域的跨域请求</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin: *</span><br></pre></td></tr></table></figure><h2 id="设置允许额外的请求头"><a href="#设置允许额外的请求头" class="headerlink" title="设置允许额外的请求头"></a>设置允许额外的请求头</h2><ul><li>默认情况下，客户端只能向服务端发送如下9个请求头：<code>Accept</code>、<code>Accept-Language</code>、<code>Content-Language</code>、<code>DPR</code>、<code>Downlink</code>、<code>Save-Data</code>、<code>Viewport-Width</code>、<code>Width</code>、<code>Content-Type</code></li><li>如果需要设置其他请求头，需要在<code>Access-Control-Allow-Headers</code>进行声明</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resp.<span class="title function_">setHeader</span>(<span class="string">&quot;Access-Control-Allow-Headers&quot;</span>, <span class="string">&quot;Key&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="设置允许的请求方法"><a href="#设置允许的请求方法" class="headerlink" title="设置允许的请求方法"></a>设置允许的请求方法</h2><h3 id="允许客户端发送指定方法的请求"><a href="#允许客户端发送指定方法的请求" class="headerlink" title="允许客户端发送指定方法的请求"></a>允许客户端发送指定方法的请求</h3><ul><li>默认情况下，客户端只能向服务端发送<code>GET</code>、<code>POST</code>、<code>HEAD</code>请求</li><li>如果需要发送其他请求，需要使用<code>Access-Control-Allow-Methods</code>来指明允许使用的请求方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Methods: GET, POST, PUT, DELETE, PATCH, OPTIONS</span><br></pre></td></tr></table></figure><h3 id="允许客户端发送任何方法的请求"><a href="#允许客户端发送任何方法的请求" class="headerlink" title="允许客户端发送任何方法的请求"></a>允许客户端发送任何方法的请求</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Methods: *</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;CORS响应头学习笔记&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>【笔记】通过NodeRed与Homeassistant的对话助理对话</title>
    <link href="https://loli.fj.cn/2025/10/04/%E9%80%9A%E8%BF%87NodeRed%E4%B8%8EHomeassistant%E7%9A%84%E5%AF%B9%E8%AF%9D%E5%8A%A9%E7%90%86%E5%AF%B9%E8%AF%9D/"/>
    <id>https://loli.fj.cn/2025/10/04/%E9%80%9A%E8%BF%87NodeRed%E4%B8%8EHomeassistant%E7%9A%84%E5%AF%B9%E8%AF%9D%E5%8A%A9%E7%90%86%E5%AF%B9%E8%AF%9D/</id>
    <published>2025-10-04T18:02:51.000Z</published>
    <updated>2025-10-25T07:39:44.980Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通过NodeRed与Homeassistant的对话助理Assist对话</p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>已经配置了对话助理，并指定了首选对话助理</li></ul><p><a href="/2025/10/05/Homeassistant%E5%B0%86Ollama%E4%BD%9C%E4%B8%BAAssist/#%E9%85%8D%E7%BD%AE%E8%AF%AD%E9%9F%B3%E5%8A%A9%E6%89%8B">传送门</a></p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ul><li>在<code>msg.payload</code>中指定对话内容</li></ul><p><img src="/images/20251005020251/01.webp"></p><ul><li>添加<code>action</code>节点</li></ul><p><img src="/images/20251005020251/02.webp"></p><blockquote><p><code>Server</code>：选择HomeAssistant服务器<br><code>Action</code>：选择<code>conversation.process</code>对话助理<br><code>Data</code>：填写格式为<code>表达式</code>的数据<code>&#123;&quot;text&quot;: payload&#125;</code>（<code>payload</code>表示将<code>msg.payload</code>的值作为对话助理的对话内容）</p></blockquote><p><img src="/images/20251005020251/03.webp"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;通过NodeRed与Homeassistant的对话助理Assist对话&lt;/p&gt;</summary>
    
    
    
    
    <category term="SmartHome" scheme="https://loli.fj.cn/tags/SmartHome/"/>
    
    <category term="Homeassistant" scheme="https://loli.fj.cn/tags/Homeassistant/"/>
    
    <category term="NodeRed" scheme="https://loli.fj.cn/tags/NodeRed/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Homeassistant将Ollama作为Assist</title>
    <link href="https://loli.fj.cn/2025/10/04/Homeassistant%E5%B0%86Ollama%E4%BD%9C%E4%B8%BAAssist/"/>
    <id>https://loli.fj.cn/2025/10/04/Homeassistant%E5%B0%86Ollama%E4%BD%9C%E4%B8%BAAssist/</id>
    <published>2025-10-04T17:44:49.000Z</published>
    <updated>2025-10-25T07:39:44.872Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Homeassistant将Ollama作为Assist</p><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>启动Ollama服务</li></ul><p><a href="/2025/10/05/Ollama%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1">传送门</a></p><h2 id="添加Ollama集成"><a href="#添加Ollama集成" class="headerlink" title="添加Ollama集成"></a>添加Ollama集成</h2><ul><li><code>设置</code>-&gt;<code>设备与服务</code></li></ul><p><img src="/images/20251005014449/01.webp"></p><ul><li><code>添加集成</code>-&gt;搜索<code>Ollama</code>-&gt;<code>Ollama</code></li></ul><p><img src="/images/20251005014449/02.webp"></p><ul><li><code>网址</code>填写Ollama服务器的URL-&gt;<code>提交</code>-&gt;进入<code>Ollama</code>集成</li></ul><p><img src="/images/20251005014449/03.webp"></p><ul><li><code>添加对话代理</code>-&gt;选择模型（Ollama服务器没有下载的模型会先下载）-&gt;定义提示词（通过<code>/no_think</code>阻止模型思考）-&gt;如果需要对话助理操作设备可以勾选<code>Assist</code>-&gt;<code>提交</code></li></ul><p><img src="/images/20251005014449/04.webp"></p><h2 id="配置语音助手"><a href="#配置语音助手" class="headerlink" title="配置语音助手"></a>配置语音助手</h2><ul><li><code>设置</code>-&gt;<code>语音助手</code></li></ul><p><img src="/images/20251005014449/05.webp"></p><ul><li><code>添加助手</code></li></ul><p><img src="/images/20251005014449/06.webp"></p><ul><li>指定配置名称-&gt;指定<code>对话代理</code>-&gt;<code>创建</code></li></ul><p><img src="/images/20251005014449/07.webp"></p><ul><li><code>设置为首选</code></li></ul><p><img src="/images/20251005014449/08.webp"></p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><ul><li><code>开始对话</code></li></ul><p><img src="/images/20251005014449/09.webp"><br><img src="/images/20251005014449/10.webp"></p><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://blog.csdn.net/weixin_43909881/article/details/149275687">CSDN——小白菜菜菜菜菜菜菜菜菜菜菜菜</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Homeassistant将Ollama作为Assist&lt;/p&gt;</summary>
    
    
    
    
    <category term="SmartHome" scheme="https://loli.fj.cn/tags/SmartHome/"/>
    
    <category term="Homeassistant" scheme="https://loli.fj.cn/tags/Homeassistant/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Ollama学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/04/Ollama%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/04/Ollama%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-04T16:48:17.000Z</published>
    <updated>2025-10-25T07:39:44.904Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Ollama学习笔记</p><span id="more"></span><h2 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h2><h3 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ollama</span><br></pre></td></tr></table></figure><h2 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama pull deepseek-r1:1.5b</span><br></pre></td></tr></table></figure><ul><li>模型会下载到<code>~/.ollama/models/blobs</code></li></ul><h2 id="启动模型"><a href="#启动模型" class="headerlink" title="启动模型"></a>启动模型</h2><ul><li>没有模型会先自动下载模型</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ollama run deepseek-r1:1.5b</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OLLAMA_HOST=0.0.0.0:11434 ollama serve</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Ollama学习笔记&lt;/p&gt;</summary>
    
    
    
    
    <category term="ArtificialIntelligence" scheme="https://loli.fj.cn/tags/ArtificialIntelligence/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】ElysiaJS学习笔记</title>
    <link href="https://loli.fj.cn/2025/10/04/ElysiaJS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://loli.fj.cn/2025/10/04/ElysiaJS%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2025-10-04T07:46:14.000Z</published>
    <updated>2025-10-25T07:39:44.857Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Ergonomic Framework for Humans（<a href="/302.html?target=https://elysiajs.com/">官网</a>）</p><span id="more"></span><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><h3 id="Bun"><a href="#Bun" class="headerlink" title="Bun"></a>Bun</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bun create elysia &lt;project_name&gt;</span><br></pre></td></tr></table></figure><h2 id="创建Web服务区"><a href="#创建Web服务区" class="headerlink" title="创建Web服务区"></a>创建Web服务区</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入模块</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Elysia</span> &#125; <span class="keyword">from</span> <span class="string">&quot;elysia&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义端口号</span></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Elysia</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义路由，处理请求</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 接收请求，返回响应</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定端口，启动服务器</span></span><br><span class="line">app.<span class="title function_">listen</span>(port)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`http://127.0.0.1:<span class="subst">$&#123;port&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><h3 id="获取请求参数"><a href="#获取请求参数" class="headerlink" title="获取请求参数"></a>获取请求参数</h3><h4 id="query"><a href="#query" class="headerlink" title="query"></a>query</h4><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/1</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> path = ctx.<span class="property">query</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(path[<span class="string">&quot;id&quot;</span>]); <span class="comment">// &quot;1&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="path"><a href="#path" class="headerlink" title="path"></a>path</h4><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET http://127.0.0.1:80/1</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/:id&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> path = ctx.<span class="property">params</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(path[<span class="string">&quot;id&quot;</span>]); <span class="comment">// &quot;1&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="body"><a href="#body" class="headerlink" title="body"></a>body</h4><figure class="highlight http"><figcaption><span>request</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST http://127.0.0.1:80/</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    id: &quot;1&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> body = ctx.<span class="property">body</span>;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(body.<span class="property">id</span>); <span class="comment">// &quot;1&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h2><h3 id="设置响应状态码"><a href="#设置响应状态码" class="headerlink" title="设置响应状态码"></a>设置响应状态码</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  ctx.<span class="property">set</span>.<span class="property">status</span> = <span class="number">200</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="设置响应头"><a href="#设置响应头" class="headerlink" title="设置响应头"></a>设置响应头</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;&#123;&#125;&quot;</span>;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  <span class="attr">headers</span>: &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="设置响应体"><a href="#设置响应体" class="headerlink" title="设置响应体"></a>设置响应体</h3><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">decorate</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ctx.<span class="property">key</span>); <span class="comment">// &quot;value&quot;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="全局状态"><a href="#全局状态" class="headerlink" title="全局状态"></a>全局状态</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">state</span>(&#123;&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(ctx.<span class="property">store</span>); <span class="comment">// &#123;&#125;</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义中间件</span></span><br><span class="line"><span class="keyword">const</span> plugin = <span class="keyword">new</span> <span class="title class_">Elysia</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注册中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(plugin);</span><br></pre></td></tr></table></figure><h2 id="路由组"><a href="#路由组" class="headerlink" title="路由组"></a>路由组</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">group</span>(<span class="string">&quot;/v1&quot;</span>, <span class="function"><span class="params">app</span> =&gt;</span> app</span><br><span class="line">    .<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;&#125;)</span><br><span class="line">    .<span class="title function_">group</span>(<span class="string">&quot;/user&quot;</span>, <span class="function"><span class="params">app</span> =&gt;</span> app</span><br><span class="line">        .<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;&#125;)</span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">group</span>(<span class="string">&quot;/product&quot;</span>, <span class="function"><span class="params">app</span> =&gt;</span> app</span><br><span class="line">        .<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">ctx</span>) =&gt;</span> &#123;&#125;)</span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.bilibili.com/video/BV1Tw41167cS/">哔哩哔哩——_优雅先森</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Ergonomic Framework for Humans（&lt;a href=&quot;/302.html?target=https://elysiajs.com/&quot;&gt;官网&lt;/a&gt;）&lt;/p&gt;</summary>
    
    
    
    
    <category term="Bun" scheme="https://loli.fj.cn/tags/Bun/"/>
    
    <category term="TypeScript" scheme="https://loli.fj.cn/tags/TypeScript/"/>
    
    <category term="ElysiaJS" scheme="https://loli.fj.cn/tags/ElysiaJS/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Bun的文件读写</title>
    <link href="https://loli.fj.cn/2025/10/04/Bun%E7%9A%84%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
    <id>https://loli.fj.cn/2025/10/04/Bun%E7%9A%84%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</id>
    <published>2025-10-04T07:39:41.000Z</published>
    <updated>2025-10-25T07:39:44.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><span id="more"></span><h2 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> file = <span class="title class_">Bun</span>.<span class="title function_">file</span>(<span class="string">&quot;&lt;file&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> data = <span class="keyword">await</span> file.<span class="title function_">text</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.bilibili.com/video/BV1Tw41167cS/">哔哩哔哩——_优雅先森</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="https://loli.fj.cn/tags/JavaScript/"/>
    
    <category term="Bun" scheme="https://loli.fj.cn/tags/Bun/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Bun的Web服务器</title>
    <link href="https://loli.fj.cn/2025/10/04/Bun%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://loli.fj.cn/2025/10/04/Bun%E7%9A%84Web%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2025-10-04T07:24:11.000Z</published>
    <updated>2025-10-25T07:39:44.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Bun的Web服务器</p><span id="more"></span><h2 id="创建Web服务器"><a href="#创建Web服务器" class="headerlink" title="创建Web服务器"></a>创建Web服务器</h2><blockquote><p><code>80</code>：指定端口号</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title class_">Bun</span>.<span class="title function_">serve</span>(&#123;</span><br><span class="line">  <span class="comment">// 定义端口号</span></span><br><span class="line">  <span class="attr">port</span>: <span class="number">80</span>,</span><br><span class="line">  <span class="title function_">fetch</span>(<span class="params">req</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(req.<span class="property">url</span>);</span><br><span class="line">    <span class="comment">// 定义路由，处理请求</span></span><br><span class="line">    <span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">// 接收请求，返回响应</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">error</span>(<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Error</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`http://127.0.0.1:<span class="subst">$&#123;app.port&#125;</span>`</span>);</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.bilibili.com/video/BV1Tw41167cS/">哔哩哔哩——_优雅先森</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Bun的Web服务器&lt;/p&gt;</summary>
    
    
    
    
    <category term="JavaScript" scheme="https://loli.fj.cn/tags/JavaScript/"/>
    
    <category term="Bun" scheme="https://loli.fj.cn/tags/Bun/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】HAOS恢复出厂设置</title>
    <link href="https://loli.fj.cn/2025/10/04/HAOS%E6%81%A2%E5%A4%8D%E5%87%BA%E5%8E%82%E8%AE%BE%E7%BD%AE/"/>
    <id>https://loli.fj.cn/2025/10/04/HAOS%E6%81%A2%E5%A4%8D%E5%87%BA%E5%8E%82%E8%AE%BE%E7%BD%AE/</id>
    <published>2025-10-04T07:14:48.000Z</published>
    <updated>2025-10-25T07:39:44.869Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>HAOS恢复出厂设置</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ha &gt; login</span><br><span class="line">rm -rf /mnt/data/supervisor/homeassistant/.storage/</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.ha-box.xyz/faq/factory-reset/index.html">HA BOX</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;HAOS恢复出厂设置&lt;/p&gt;</summary>
    
    
    
    
    <category term="SmartHome" scheme="https://loli.fj.cn/tags/SmartHome/"/>
    
    <category term="Homeassistant" scheme="https://loli.fj.cn/tags/Homeassistant/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】HAOS进入Shell</title>
    <link href="https://loli.fj.cn/2025/10/04/HAOS%E8%BF%9B%E5%85%A5Shell/"/>
    <id>https://loli.fj.cn/2025/10/04/HAOS%E8%BF%9B%E5%85%A5Shell/</id>
    <published>2025-10-04T06:51:55.000Z</published>
    <updated>2025-10-25T07:39:44.869Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>HAOS进入Shell</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ha &gt; login</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.ha-box.xyz/faq/factory-reset/index.html">HA BOX</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;HAOS进入Shell&lt;/p&gt;</summary>
    
    
    
    
    <category term="SmartHome" scheme="https://loli.fj.cn/tags/SmartHome/"/>
    
    <category term="Homeassistant" scheme="https://loli.fj.cn/tags/Homeassistant/"/>
    
  </entry>
  
  <entry>
    <title>【笔记】Deno生成UUID</title>
    <link href="https://loli.fj.cn/2025/10/04/Deno%E7%94%9F%E6%88%90UUID/"/>
    <id>https://loli.fj.cn/2025/10/04/Deno%E7%94%9F%E6%88%90UUID/</id>
    <published>2025-10-04T05:09:32.000Z</published>
    <updated>2025-10-25T07:39:44.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Deno生成UUID</p><span id="more"></span><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uuid <span class="keyword">from</span> <span class="string">&quot;https://deno.land/std/uuid/mod.ts&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(uuid.<span class="property">v4</span>.<span class="title function_">generate</span>());</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="/302.html?target=https://www.bilibili.com/video/BV1A5411x7bg/">哔哩哔哩——程序员吴海洋</a></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;Deno生成UUID&lt;/p&gt;</summary>
    
    
    
    
    <category term="TypeScript" scheme="https://loli.fj.cn/tags/TypeScript/"/>
    
    <category term="Deno" scheme="https://loli.fj.cn/tags/Deno/"/>
    
  </entry>
  
</feed>
